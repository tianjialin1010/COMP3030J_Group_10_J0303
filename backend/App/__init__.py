import os

from flask import Flask,send_from_directory
from backend.App.exts import init_exts
from flask_sqlalchemy import SQLAlchemy
from flask_migrate import Migrate
from backend.App.views import blue
from flask_cors import CORS


HOSTNAME = "127.0.0.1"
PORT = 3306
USERNAME = "root"
PASSWORD = "2003721gavin?"
FLASK_DB = "comp3030j"

def createApp(config_name=None):
    app = Flask(__name__,
                static_folder='../..')
    CORS(app)
    app.register_blueprint(blueprint=blue)
    app.config['SECRET_KEY'] = 'J0303'
    db_uri = f'mysql+pymysql://{USERNAME}:{PASSWORD}@{HOSTNAME}:{PORT}/{FLASK_DB}?charset=utf8mb4'
    app.config['SQLALCHEMY_DATABASE_URI'] = db_uri
    app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
    register_routes(app)


    if config_name == 'testing':
        # Specific configurations for the testing environment
        app.config['TESTING'] = True
        app.config['DEBUG'] = True
        app.config['SQLALCHEMY_ECHO'] = True  # Echoes all the SQL queries generated by SQLAlchemy

    elif config_name == 'development':
        # Development specific configurations
        app.config['TESTING'] = False
        app.config['DEBUG'] = True
        app.config['EXPLAIN_TEMPLATE_LOADING'] = True

    elif config_name == 'production':
        # Production specific configurations
        app.config['TESTING'] = False
        app.config['DEBUG'] = False
        # It's generally a good practice to disable error propagation in production
        app.config['PROPAGATE_EXCEPTIONS'] = False
        app.config['SQLALCHEMY_ECHO'] = False

    init_exts(app)
    return app

def register_routes(app):
    @app.route('/', defaults={'path': ''})
    @app.route('/<path:path>')
    def serve_frontend(path):
        dist_path = os.path.join(app.static_folder, 'frontend', 'dist')
        if path and os.path.exists(os.path.join(dist_path, path)):
            return send_from_directory(dist_path, path)
        else:
            return send_from_directory(dist_path, 'index.html')

    @app.route('/admin/', defaults={'path': ''})
    @app.route('/admin/<path:path>')
    def serve_admin_frontend(path):
        admin_dist_path = os.path.join(app.static_folder, 'frontend_admin', 'dist')
        if path and os.path.exists(os.path.join(admin_dist_path, path)):
            return send_from_directory(admin_dist_path, path)
        else:
            return send_from_directory(admin_dist_path, 'index.html')

